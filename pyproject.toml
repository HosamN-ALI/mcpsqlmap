[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-server"
version = "1.0.0"
authors = [
    { name = "MCP Server Team" }
]
description = "Advanced Model Context Protocol server for vulnerability discovery"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
dependencies = [
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "python-multipart>=0.0.5",
    "aiohttp>=3.8.1",
    "pydantic>=1.8.2",
    "requests>=2.26.0",
    "aiofiles>=0.8.0",
    "langchain>=0.0.150",
    "openai>=0.27.0",
    "python-dotenv>=0.19.0",
    "pyyaml>=5.4.1"
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=3.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.1.0",
    "aioresponses>=0.7.4",
    "responses>=0.23.0",
    "coverage>=6.4.0",
    "black>=22.3.0",
    "flake8>=4.0.1",
    "mypy>=0.950",
    "isort>=5.10.1"
]

[tool.pytest.ini_options]
testpaths = ["src/server/tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src/server --cov-report=term-missing"
asyncio_mode = "strict"

[tool.coverage.run]
source = ["src/server"]
omit = ["src/server/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
